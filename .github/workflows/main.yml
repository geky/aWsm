# CI workflow
name: test
on: [push, pull_request]

env:
  # rust equivalent of -Werror
  RUSTFLAGS: --deny warnings
  # used during LLVM installation
  LLVM_VERSION: 9
  # URLs for WebAssembly libcs
  WASMCEPTION_URL: https://github.com/geky/aWsm/releases/download/wasmception-0.1/wasmception-0.1.tar.gz
  WASI_SDK_URL: https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-8/wasi-sdk-8.0-linux.tar.gz

# job control
jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        libc: [wasmception, wasi-sdk]

    steps:
      - name: Install
        run: |
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" bash $LLVM_VERSION
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-$LLVM_VERSION 100
          sudo update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-$LLVM_VERSION 100
          sudo apt install libc++-dev libc++abi-dev --yes
          # not really sure why we need to modify this
          PATH=/usr/bin:$PATH
          llvm-config --version

      - name: Install wasmception
        if: matrix.libc == 'wasmception'
        run: |
          sudo apt-get install libtinfo5 --yes
          # TODO why is this needed?
          sudo ln -s /usr/lib/x86_64-linux-gnu/libtinfo.so /usr/lib/x86_64-linux-gnu/libtinfo.so.6
          ls /usr/lib/x86_64-linux-gnu

      - uses: actions/checkout@v2

      - name: Compile
        run: |
          cargo build

      - name: Preliminary tests
        # note we skip code_benches, we run code_benches/run.py ourselves
        # to pass explicit flags
        run: |
          cargo test -- --skip code_benches

      - name: Download wasmception
        if: matrix.libc == 'wasmception'
        run: |
          cd wasmception
          make
          cd ..
          cp -r wasmception/sysroot wasmception/dist/sysroot

      - name: Upload?
        uses: actions/upload-artifact@v1
        with:
          name: wasmception-1.0
          path: wasmception/dist

#          wget $WASMCEPTION_URL -O wasmception.tar.gz
#          mkdir -p wasmception
#          tar xvfz wasmception.tar.gz --strip-components=1 -C wasmception

      - name: Download wasi-sdk
        if: matrix.libc == 'wasi-sdk'
        run: |
          wget $WASI_SDK_URL -O wasi-sdk.tar.gz
          mkdir -p wasi-sdk
          tar xvfz wasi-sdk.tar.gz --strip-components=1 -C wasi-sdk

      - name: Code benches
        run: |
          ./code_benches/run.py --debug --${{matrix.libc}}

      - name: Results
        run: |
          cat code_benches/benchmarks.csv
